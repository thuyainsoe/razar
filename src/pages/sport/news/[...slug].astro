---
import { getCollection, getEntry } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import { formatDate } from "../../../utils";
import FontHeading from "../../../components/FontHeading.astro";
import { Image } from "astro:assets";
const { slug } = Astro.params;

if (slug === undefined) {
  throw new Error("Slug is required");
}

const entry = await getEntry("sport", slug);

if (entry === undefined) {
  return Astro.redirect("/404");
}

const { Content } = await entry.render();

const sports = await getCollection("sport");

const relatedPosts = sports
  .filter((post) => post.slug !== slug)
  .slice(0, 5)
  .map((item) => ({ ...item, slug: `${item.slug}` }));

const publishedDate = formatDate(entry.data.publishedDate);

export async function getStaticPaths() {
  const blogs = await getCollection("sport");
  return blogs.map(({ slug }) => ({ params: { slug } }));
}
export const prerender = true;
---

<Layout
  title={`${entry.data.title} - Razar Insights`}
  description={entry.data.description}
  metaUrl={`https://www.dailytopics.info/sport/news/${slug}`}
  metaImage={`https://www.dailytopics.info${entry.data.coverImage}`}
  keywords={entry.data.keywords}
  updatedTime={entry.data.publishedDate.toISOString()}
>
  <div
    class="w-full main-container grid grid-cols-1 md:grid-cols-4 gap-x-10 gap-y-5 blog-content py-8 md:py-12"
  >
    <!-- Main Blog Content (Left Side) -->
    <div class="col-span-1 md:col-span-3">
      <header class="">
        <div class="container mx-auto">
          <h1 class="text-4xl font-bold">{entry.data.title}</h1>
          <p class="mt-4 text-base">{entry.data.description}</p>
          <div class="flex flex-wrap items-center gap-2 mt-6 text-sm">
            <span>By {entry.data.author}</span>
            <span>|</span>
            <span>{publishedDate}</span>
            <span>|</span>
            <ul class="flex flex-wrap gap-2">
              {
                entry?.data?.tags?.map((tag, index) => (
                  <li
                    class={`${index % 2 === 0 ? "bg-primary" : "bg-primary"} text-white px-2 py-1 rounded-md text-xs`}
                  >
                    {tag}
                  </li>
                ))
              }
            </ul>
          </div>
        </div>
      </header>

      <main class="mx-auto py-10">
        <img
          src={entry.data.coverImage}
          alt={`Cover image for ${entry.data.title}`}
          class="w-full h-auto rounded-lg shadow-lg mb-8 aspect-[3/2] object-cover"
        />
        <Content />
      </main>

      <footer class="bg-dark text-text pb-10">
        <div class="container mx-auto">
          Written by <span class="font-semibold text-text"
            >{entry.data.author}</span
          ><br />
          Published on:
          <time datetime="{entry.data.publishedDate}"
            >{entry.data.publishedDate}</time
          >
        </div>
      </footer>
    </div>

    <div class="col-span-1 md:col-span-1 md:block">
      <div class="text-text">
        <!-- Section Heading -->
        <FontHeading label="Other News" />

        <div class="flex flex-col gap-[20px] mt-4">
          {
            relatedPosts.map((post) => (
              <div class="flex flex-col items-left text-left rounded-md shadow-sm border">
                <Image
                  src={post.data.coverImage}
                  alt={post.data.title}
                  class="rounded-md w-full h-auto object-cover aspect-[3_/_2]"
                  width={200}
                  height={200}
                />
                <div class="px-4 py-5 flex flex-col gap-[10px]">
                  <h4 class="text-base font-semibold text-text transition line-clamp-2">
                    <a class="underline" href={`/sport/news/${post.slug}`}>
                      {post.data.title}
                    </a>
                  </h4>
                  <p class="text-sm text-text/80 !my-0 line-clamp-3">
                    {post.data.description}
                  </p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</Layout>
